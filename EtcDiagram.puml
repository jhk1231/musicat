@startuml
'https://plantuml.com/class-diagram

' -- etc--
class ChatRoomVO{
- String roomId
- String name
- Set<WebSocketSession> sessions = new HashSet<>

+ {static} create(String name): ChatRoomVO
+ getRoomId(): String
+ setRoomId(String roomId): void
+ getName(): String
+ setName(String name): void
+ getSessions(): HashSet<WebSocketSession>
+ setSessions(Set<WebSocketSession> sessions): void
}

class ChatVO{
- String roomId
- String writer
- String message
- boolean isSystem = false

+ getRoomId(): String
+ setRoomId(String roomId): void
+ getWriter(): String
+ setWriter(String writer): void
+ getMessage(): String
+ setMessage(String message): void
+ getIsSystem(): boolean
+ setIsSystem(boolean isSystem): void
}

class DailyStatisticsVO{
- int dailyNo
- String dailyDate
- int dailyVisits
- int dailyArticle

+ DailyStatisticsVO()
+ DailyStatisticsVO(int dailyNo, String dailyDate, int dailyVisits, int dailyArticle)
+ toString()
+ getDailyNo(): int
+ setInt(int dailyNo) dailyNo: void
+ getDailyDate(): String
+ setString(String dailyDate) dailyDate: void
+ getDailyVisits(): int
+ setInt(int dailyVisits) dailyVisits: void
+ getDailyArticle(): int
+ setInt(int dailyArticle) dailyArticle: void
}


class TotalStatisticsVO{
private int totalNo;
- int totalMember;
- int totalArticle;
- int totalView;
- int totalVisits;

+ TotalStatisticsVO()
+ TotalStatisticsVO(int totalNo, int totalMember, int totalArticle, int totalView, int totalVisits)
+ toString()
+ getTotalNo(): int
+ setTotalNo(int totalNo): void
+ getTotalMember(): int
+ setTotalMember(int totalMember): void
+ getTotalArticle(): int
+ setTotalArticle(int totalArticle): void
+ getTotalView(): int
+ setTotalView(int totalView): void
+ getTotalVisits(): int
+ setTotalVisits(int totalVisits): void
}



' -------------------  etc -----------------------
interface DailyStatisticsDao{
- DailyStatisticsMapper dailyMapper
- DailyStatisticsVO dailyVo

+ selectDaily(): DailyStatisticsVO
+ selectList(): ArrayList<DailyStatisticsVO>
+ insertAndupdateDaily(): void
}


interface TotalStatisticsDao{
- TotalStatisticsMapper totalMapper
- TotalStatisticsVO totalVo

+ selectTotal(): TotalStatisticsVO
+ insertAndupdateTotal(): void
}

' 그려주세요
class ChatRoomRepository{
- Map<String, ChatRoomVO> chatRoomDTOMap

+ init() : void
+ findAllRooms() : List<ChatRoomVO>
+ findRoomById(String id) : ChatRoomVO
+ createChatRoomDTO(String name) : ChatRoomVO
+ deleteChatRoom(String chatRoomId) : String
}
class DailyStatisticsDaoImpl
class NoteDaoImpl
class TotalStatisticsDaoImpl

class NotifyService {
- NotifyDao notifyDao

+ insertNotify(NotifyVO notifyVo) : void
+ selectNotify(int memberNo) : List<NotifyVO>
+ updateNotifyRead(int notify_no) : void
+ selectNotifyOne(int notify_no) : NotifyVO
}

class NotifyManager{
- SimpMessagingTemplate template;
- Map<Integer, String> notifyMap;

+ init() : void
+ addToNotifyList(int memberNo, String notifyId) : void
+ deleteFromNotifyList(int memberNo) : void
+ getNotifyId(int memberNo) : String
+ addNotify(NotifyVO notifyVo) : void
+ updateNotifyRead(int notify_no) : void
+ publishNotify(int memberId) : void
+ selectNotifyOne(int notify_no) : NotifyVO
}

class NotifyDao {
- NotifyMapper mapper
- NotifyService notifyService
- StompHandler stompHandler

+ insertNotify(NotifyVO notifyVo) : void
+ selectNotify(int member_no) : List<NotifyVO>
+ updateNotifyRead(int notify_no) : void
+ selectNotifyOne(int notify_no) : NotifyVO
}

class NotifyVO{
- int notify_no
- int member_no
- String content
- String sendDate
- String readDate
- String link;

+ NotifyVO(int member_no, String content, String link)
}

@enduml