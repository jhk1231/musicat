@startuml
'https://plantuml.com/class-diagram

'구현
' -------------- Dao -------------------
BoardDao <|.. BoardDaoImpl
CategoryDao <|.. CategoryDaoImpl
' -------------- Service -------------------
BoardSerivce <|.. BoardServiceImpl
CategorySerivce <|.. CategoryServiceImpl

BoardMapper <.. BoardDao
CategoryMapper <.. CategoryDao

BoardService <.. BoardController
CategoruService <.. BoardController



interface BoardMapper{
+ insertBoard(BoardVO boardVo): void
+ selectLastInsertBoardNo(): int
+ insertBoardGrade(BoardGradeVO boardGradeVo): void
+ selectBoardkind(): ArrayList<BoardVO>
+ selectConnectArticle(int boardNo): int
+ deleteBoard(int boardNo): void
+ updateBoard(BoardVO boardVo, BoardGradeVO boardGradeVo): void
+ selectOneBoard(int boardNo): BoardBoardGradeVO
+ selectAllBoard(): ArrayList<BoardBoardGradeVO>
+ selectDuplicatedBoard(String boardName): Integer
+ insertLikeBoard(int memberNo, int boardNo): void
+ deleteLikeBoard(int memberNo, int boardNo): void
+ selectLikeBoard(int memberNo, int boardNo): int
+ selectLikeBoardList(int no) : ArrayList<BoardVO>
}

interface CategoryMapper{
+ insertCategory(String categoryName) : void
+ updateCategory(int categoryNo, String categoryName) : void
+ selectConnectBoard(int categoryNo): int
+ deleteCategory(int categoryNo): void
+ selectOneCategory(int categoryNo); CategoryVO
+ selectDuplicatedCategory(String categoryName): Integer
+ selectCategoryList(): ArrayList<CategoryVO>
+ selectCategoryBoardList(): ArrayList<CategoryBoardVO>
}


class BestArticleVO{
- int no
- int articleNo
- String subject
- int likecount
- String systemFileName
- int rank

+ BestArticleVO()
+ BestArticleVO(int no, int articleNo, String subject, int likecount, int rank)
+ getNo(): int
+ setNo(int no): void
+ getArticleNo(): int
+ setArticleNo(int articleNo): void
+ getSubject(): String
+ setSubject(String subject): void
+ getLikecount(): int
+ setLikecount(int likecount): void
+ getSystemFileName(): String
+ setSystemFileName(String systemFileName): void
+ getRank(): int
+ setRank(int rank): void
}

class BoardBoardGradeVO{
- BoardVO boardVo
- BoardGradeVO boardGradeVo

+ BoardBoardGradeVO()
+ BoardBoardGradeVO(BoardVO boardVo, BoardGradeVO boardGradeVo)
+ toString()
+ getBoardVo(): BoardVO
+ setBoardVo(BoardVO boardVo): void
+ getBoardGradeVo(): BoardGradeVO
+ setBoardGradeVo(BoardGradeVO boardGradeVo): void
}

class BoardGradeVO{
- int boardNo
- int readGrade
- int writeGrade
- int readwrite
- int gradeNo
- String gradeName

+ BoardGradeVO()
+ BoardGradeVO(int boardNo, int readGrade, int writeGrade, int readwrite, int gradeNo, String gradeName)
+ toString()
+ getBoardNo(): int
+ setBoardNo(int boardNo): void
+ getReadGrade(): int
+ setReadGrade(int readGrade): void
+ getWriteGrade(): int
+ setWriteGrade(int writeGrade): void
+ getReadwrite(): int
+ setReadwrite(int readwrite): void
+ getGradeNo(): int
+ setGradeNo(int gradeNo): void
+ getGradeName(): String
+ setGradeName(String gradeName): void
}

class BoardVO{
- int categoryNo
- int boardNo
- String boardName
- int boardkind
- String boardkindName

+ BoardVO()
+ BoardVO(int boardNo, String boardName, int boardkind)
+ BoardVO(int categoryNo, int boardNo, String boardName, int boardkind, String boardkindName, int favoriteNo, int no, List<BoardVO> boardGradeList)
+ toString()
+ getCategoryNo(): int
+ setCategoryNo(int categoryNo): void
+ getBoardNo(): int
+ setBoardNo(int boardNo): void
+ getBoardName(): String
+ setBoardName(String boardName): void
+ getBoardkind(): int
+ setBoardkind(int boardkind): void
+ getBoardkindName(): String
+ setBoardkindName(String boardkindName): void
}

class CategoryBoardVO{
- CategoryVO categoryVo
- BoardVO boardVo

+ CategoryBoardVO()
+ CategoryBoardVO(CategoryVO categoryVo, BoardVO boardVo)
+ toString()
+ getCategoryVo(): CategoryVO
+ setCategoryVo(CategoryVO categoryVo): void
+ getBoardVo(): BoardVO
+ setBoardVo(BoardVO boardVo): void
}

class CategoryVO{
- int categoryNo
- String categoryName
- List<CategoryVO> categoryList = new ArrayList<>
- List<BoardVO> boardList = new ArrayList<>

+ CategoryVO()
+ CategoryVO(int categoryNo, String categoryName, List<CategoryVO> categoryList, List<BoardVO> boardList)
+ toString()
+ getCategoryNo(): int
+ setCategoryNo(int categoryNo): void
+ getCategoryName(): String
+ setCategoryName(String categoryName): void
+ getCategoryList(): ArrayList<CategoryVO>
+ setCategoryList(List<CategoryVO> categoryList): void
+ getBoardList(): ArrayList<BoardVO>
+ setBoardList(List<BoardVO> boardList): void
+ addBoardList(BoardVO board): void
}

class CreateBoardVO{
+ List<CategoryVO> categoryList;
+ List<GradeVO> gradeList;
+ List<BoardVO> boardkindList;
+ BoardBoardGradeVO bbg;

}

class SelectArticleVO{
- ArticleVO article
- FileVO file

+ SelectArticleVO()
+ toString()
+ getArticle(): ArticleVO
+ setArticleVO(ArticleVO article): void
+ getFile(): FileVO
+ setFileVO(FileVO file): void
}




' ---------------- end Domain ----------------






interface BoardDao{
- BoardMapper boardMapper

+ insertBoard(BoardVO boardVo): void
+ selectLastInsertBoardNo(): int
+ insertBoardGrade(BoardGradeVO boardGradeVo): void
+ selectBoardkind(): ArrayList<BoardVO>
+ selectConnectArticle(int boardNo): int
+ deleteBoard(int boardNo): void
+ updateBoard(BoardVO boardVo, BoardGradeVO boardGradeVo): void
+ selectOneBoard(int boardNo): BoardBoardGradeVO
+ selectAllBoard(): ArrayList<BoardBoardGradeVO>
+ selectDuplicatedBoard(String boardName): Integer
+ insertLikeBoard(int memberNo, int boardNo): void
+ deleteLikeBoard(int memberNo, int boardNo): void
+ selectLikeBoard(int memberNo, int boardNo): int
+ selectLikeBoardList(int no): ArrayList<BoardVO>
}

interface CategoryDao{
- CategoryMapper categoryMapper

+ insertCategory(String categoryName): void
+ updateCategory(int categoryNo, String categoryName): void
+ selectConnectBoard(int categoryNo): int
+ deleteCategory(int categoryNo): void
+ selectConnectBoard(int categoryNo): int
+ selectOneCategory(int categoryNo): CategoryVO
+ selectCategoryList(): ArrayList<CategoryVO>
+ selectCategoryBoardList(): ArrayList<CategoryBoardVO>
+ selectDuplicatedCategory(String categoryName): Integer
}



class BoardDaoImpl
class CategoryDaoImpl

' --------------- DAO ---------------------------






interface BoardService{
- BoardDao boardDao

+ registerBoard(BoardVO boardVo, BoardGradeVO boardGradeVo): void
+ retrieveBoardkind(): ArrayList<BoardVO>
+ retrieveConnectArticle(int boardNo): int
+ checkWriteGrade(int boardNo, int gradeNo): int
+ removeBoard(int boardNo): void
+ modifyBoard(BoardVO boardVo, BoardGradeVO boardGradeVo): void
+ retrieveOneBoard(int boardNo): BoardBoardGradeVO
+ retrieveAllBoard(): ArrayList<BoardBoardGradeVO>
+ retrieveAllWriteBoard(int gradeNo): List<BoardVO>
+ retrieveAllReadBoard(int boardNo, int gradeNo): boolean
+ retrieveDuplicatedBoard(String boardName): Integer
+ registerLikeBoard(int memberNo, int boardNo):  void
+ removeLikeBoard(int memberNo, int boardNo):  void
+ retrieveLikeBoard(int memberNo, int boardNo):  int
+ retrieveLikeBoardList(int memberNo):  ArrayList<BoardVO>
}

interface CategoryService{
- CategoryDao categoryDao

+ registerCategory(String categoryName): void
+ modifyCategory(int categoryNo, String categoryName): void
+ removeCategory(int categoryNo): void
+ retrieveConnectBoard(int categoryNo): int
+ retrieveOneCategory(int categoryNo): CategoryVO
+ retrieveCategoryList(): ArrayList<CategoryVO>
+ retrieveCategoryBoardList(): ArrayList<CategoryVO>
+ retrieveDuplicatedCategory(String categoryName): Integer
}

' Service 구현 Class



class BoardServiceImpl
class CategoryServiceImpl

'--------------------Controller------------------------

class BoardController{
- BoardService boardService
- CategoryService categoryService
- GradeService gradeService
- ArticleService articleService
- FileService fileService
- MusicApiService musicApiService
- TemplateModelFactory templateModelFactory

+ petopiaMain(Model model): String
+ boardManager(Model model): String
+ accessDenied(Model model): String
+ writeCategory(@ModelAttribute("categoryVo") CategoryVO categoryVo): Map<String, Integer>
+ selectOneCategory(@RequestBody HashMap<String, Object> map): CategoryVO
+ modifyCategory ( @ModelAttribute("categoryVo") CategoryVO categoryVo): Map<String, Integer>
+ deleteCategory(@ModelAttribute("categoryVo") CategoryVO categoryVo): Map<String, Integer>
+ selectListAdd(): CreateBoardVO
+ writeBoard(@RequestParam("categoryNo") int categoryNo, @RequestParam("boardName") String boardName,
+		@RequestParam("writeGrade") int writeGrade, @RequestParam("readGrade") int readGrade,
+		@RequestParam("boardkind") int boardkind): Map<String, Integer>
+ selectListModify(@RequestBody HashMap<String, Object> map ): CreateBoardVO
+ modifyBoard(@RequestParam("boardNo") int boardNo, @RequestParam("categoryNo") int categoryNo,
+		@RequestParam("boardName") String boardName, @RequestParam("writeGrade") int writeGrade,
+		@RequestParam("readGrade") int readGrade, @RequestParam("boardkind") int boardkind): Map<String, Integer>
+ modifyBoardSub(BoardVO boardVo, BoardGradeVO boardGradeVo,
+      int boardNo, int categoryNo, String boardName, int writeGrade, int readGrade, int boardkind): void
+ deleteBoard(@ModelAttribute("boardVo") BoardVO boardVo): Map<String, Integer>
+ selectAllNomalArticle(@PathVariable("boardNo") int boardNo, Model model): String
+ setAudioBoardThumbnail(List<ArticleVO> articles): void
+ pagingBoardList(@RequestParam("movePage") int movePage, @RequestParam("boardNo") int boardNo,
+      @RequestParam(value = "keyword", required = false) String keyword,
+		@RequestParam(value = "content", required = false) String content): Map<String, Object>
+ searchByBoard(@RequestParam("keyword") String keyword ,@RequestParam("content") String content
+		,@RequestParam("boardNo") Integer boardNo ,@RequestParam(value = "aKeyword", required = false) String aKeyword
+		,@RequestParam(value = "aContent", required = false) String aContent): Map<String, Object>
+ likeBoard(@RequestParam("memberNo") int memberNo, @RequestParam("boardNo") int boardNo): Map<String, Integer>
}
@enduml