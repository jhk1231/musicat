<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.musicat.mapper.member.ResourceMapper">


<!--			resource와 grade mapping -->
	<resultMap id="selectGradeResourceResultMap" type="gradeResourceVo">
		<result property="gradeResourceNo" javaType="int" column="grade_resource_no" jdbcType="INTEGER" />
		<result property="resourceNo" javaType="int" column="resource_no" jdbcType="INTEGER" />
		<result property="resourceName" javaType="string" column="resource_name" jdbcType="VARCHAR" />
		<result property="resourceType" javaType="string" column="resource_type" jdbcType="VARCHAR" />
		<result property="gradeNo" javaType="int" column="grade_no" jdbcType="INTEGER" />
		<result property="grade" javaType="string" column="auth" jdbcType="VARCHAR" />
		<result property="gradeName" javaType="string" column="name" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectGradeResourceList" resultType="gradeResourceVo" resultMap="selectGradeResourceResultMap">
		SELECT gr.grade_resource_no, gr.resource_no, r.resource_name,  r.resource_type, g.grade_no, g.auth, g.name
		FROM grade_resource gr INNER JOIN grade g INNER JOIN resource r
															 ON gr.grade_no = g.grade_no AND gr.resource_no = r.resource_no
		ORDER BY g.grade_no
	</select>

	<select id="selectOneGradeResource" resultType="gradeResourceVo" resultMap="selectGradeResourceResultMap">
		SELECT gr.grade_resource_no, gr.resource_no, r.resource_name,  r.resource_type, g.grade_no, g.auth, g.name
		FROM grade_resource gr INNER JOIN grade g INNER JOIN resource r
															 ON gr.grade_no = g.grade_no AND gr.resource_no = r.resource_no
		WHERE grade_resource_no = #{gradeResourceNo}
	</select>

<!--	resource + grade 추가-->
	<insert id="insertGradeResource" parameterType="gradeResourceVo" statementType="CALLABLE">
		{ CALL sp_insert_grade_resource(#{resourceName}, #{resourceType}, #{gradeNo}) }
	</insert>

<!--	resource + grade 수정-->
	<update id="updateGradeResource" parameterType="gradeResourceVo" statementType="CALLABLE">
		{ CALL sp_update_grade_resource(#{gradeResourceNo}, #{resourceName}, #{resourceType}, #{gradeNo})}
	</update>

<!--	resource + grade 삭제 -->
	<delete id="deleteGradeResource">
		{ CALL sp_delete_grade_resource(#{gradeResourceNo}) }
	</delete>

<!--	resource + grade 중복 조회-->
<!--	<select id="selectDuplicatedResource" resultType="HashMap">-->
<!--		SELECT resource_no, grade_no-->
<!--		FROM grade_resource-->
<!--		WHERE grade_no = #{gradeNo} AND resource_no = (SELECT resource_no-->
<!--														FROM resource-->
<!--														WHERE resource_name = #{resourceName})-->
<!--	</select>-->
	<select id="selectDuplicatedResource" resultType="INTEGER">
		SELECT resource_no
		FROM grade_resource
		WHERE  resource_no = (SELECT resource_no
							   FROM resource
							   WHERE resource_name = #{resourceName})
	</select>

<!--	resource-->
<!--	resource 목록 조회-->
	<resultMap id="selectResourceListResultMap" type="resourceVo">
		<result property="resourceNo" javaType="int" column="resource_no" jdbcType="INTEGER" />
		<result property="resourceName" javaType="string" column="resource_name" jdbcType="VARCHAR" />
		<result property="resourceType" javaType="string" column="resource_type" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectResourceList" resultType="resourceVo" resultMap="selectResourceListResultMap">
		SELECT resource_no, resource_name, resource_type
		FROM resource
	</select>



</mapper>